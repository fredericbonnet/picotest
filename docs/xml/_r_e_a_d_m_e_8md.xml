<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>PicoTest:<sp/>A<sp/>minimalist<sp/>unit<sp/>testing<sp/>framework<sp/>for<sp/>C<sp/>programs</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>is<sp/>a<sp/>single-file<sp/>unit<sp/>testing<sp/>framework<sp/>for<sp/>C<sp/>programs<sp/>that<sp/>follows</highlight></codeline>
<codeline><highlight class="normal">the<sp/>xUnit<sp/>principles:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">https://en.wikipedia.org/wiki/XUnit</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>License</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>is<sp/>released<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>3-Clause<sp/>BSD<sp/>License:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">https://opensource.org/licenses/BSD-3-Clause</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>is<sp/>a<sp/>single-file<sp/>package,<sp/>everything<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>header<sp/>file</highlight></codeline>
<codeline><highlight class="normal">`picotest.h`.<sp/>So<sp/>you<sp/>can<sp/>either<sp/>install<sp/>this<sp/>file<sp/>in<sp/>a<sp/>standard<sp/>location,<sp/>or</highlight></codeline>
<codeline><highlight class="normal">copy<sp/>it<sp/>within<sp/>your<sp/>project<sp/>source<sp/>tree.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Usage</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Simply<sp/>include<sp/>the<sp/>file<sp/>in<sp/>your<sp/>source<sp/>file,<sp/>then<sp/>start<sp/>writing<sp/>your<sp/>tests!</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```c</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;picotest.h&gt;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Documentation</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>complete<sp/>documentation<sp/>is<sp/>available<sp/>here:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">https://fredericbonnet.github.io/picotest</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>documentation<sp/>site<sp/>was<sp/>built<sp/>using<sp/>these<sp/>great<sp/>tools:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[Doxygen]<sp/>extracts<sp/>the<sp/>documentation<sp/>from<sp/>the<sp/>source<sp/>code<sp/>as<sp/>both<sp/>HTML<sp/>and<sp/>XML</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>formats<sp/>(the<sp/>raw<sp/>HTML<sp/>output<sp/>is<sp/>available<sp/>[here][htmldocs])</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[seaborg]<sp/>converts<sp/>the<sp/>XML<sp/>files<sp/>to<sp/>Markdown<sp/>(full<sp/>disclosure:<sp/>I&apos;m<sp/>the<sp/>author</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>of<sp/>this<sp/>tool!)</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[docsify]<sp/>generates<sp/>the<sp/>documentation<sp/>site<sp/>from<sp/>the<sp/>Markdown<sp/>files</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>rebuild<sp/>the<sp/>documentation<sp/>you&apos;ll<sp/>need<sp/>the<sp/>following<sp/>tools:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>[Doxygen]<sp/>to<sp/>process<sp/>the<sp/>provided<sp/>`Doxyfile`<sp/>and<sp/>parse<sp/>the<sp/>source<sp/>code</highlight></codeline>
<codeline><highlight class="normal">-<sp/>[Node.js]<sp/>to<sp/>run<sp/>the<sp/>build<sp/>scripts:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>run<sp/>docs</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>to<sp/>serve<sp/>the<sp/>documentation<sp/>locally<sp/>you<sp/>can<sp/>use<sp/>the<sp/>provided<sp/>script:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">npm<sp/>run<sp/>docsify</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>`examples`<sp/>subdirectory<sp/>contains<sp/>several<sp/>example<sp/>source<sp/>files<sp/>that</highlight></codeline>
<codeline><highlight class="normal">demonstrate<sp/>the<sp/>various<sp/>features<sp/>of<sp/>PicoTest.<sp/>These<sp/>examples<sp/>are<sp/>also<sp/>integrated</highlight></codeline>
<codeline><highlight class="normal">in<sp/>the<sp/>documentation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Building<sp/>the<sp/>examples<sp/>requires<sp/>the<sp/>CMake<sp/>build<sp/>tool<sp/>along<sp/>with<sp/>your<sp/>favorite</highlight></codeline>
<codeline><highlight class="normal">toolchain:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">https://cmake.org/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Tests</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>is<sp/>self-tested<sp/>and<sp/>comes<sp/>with<sp/>a<sp/>complete<sp/>test<sp/>suite<sp/>that<sp/>covers<sp/>all</highlight></codeline>
<codeline><highlight class="normal">aspects<sp/>of<sp/>the<sp/>framework.<sp/>This<sp/>guarantees<sp/>that<sp/>PicoTest<sp/>is<sp/>production-ready.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>test<sp/>suite<sp/>itself<sp/>is<sp/>a<sp/>good<sp/>real-world<sp/>example<sp/>of<sp/>PicoTest<sp/>in<sp/>action.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Building<sp/>and<sp/>running<sp/>the<sp/>test<sp/>suite<sp/>requires<sp/>CMake<sp/>(see<sp/>next<sp/>section<sp/>for<sp/>more</highlight></codeline>
<codeline><highlight class="normal">information).<sp/>To<sp/>build<sp/>the<sp/>suite:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>tests</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>-S<sp/>.<sp/>-B<sp/>build</highlight></codeline>
<codeline><highlight class="normal">cmake<sp/>--build<sp/>build</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>build<sp/>process<sp/>makes<sp/>use<sp/>of<sp/>the<sp/>test<sp/>discovery<sp/>mechanism<sp/>described<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">next<sp/>section.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>run<sp/>the<sp/>suite<sp/>using<sp/>CTest:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>tests/build</highlight></codeline>
<codeline><highlight class="normal">ctest</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>also<sp/>run<sp/>the<sp/>suite<sp/>executable<sp/>`test_picotest`<sp/>directly<sp/>from<sp/>the<sp/>CMake</highlight></codeline>
<codeline><highlight class="normal">output<sp/>directory.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Integration<sp/>with<sp/>CMake</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>provides<sp/>a<sp/>CMake<sp/>package<sp/>definition<sp/>for<sp/>easier<sp/>integration<sp/>with</highlight></codeline>
<codeline><highlight class="normal">other<sp/>CMake<sp/>projects.<sp/>In<sp/>particular,<sp/>it<sp/>comes<sp/>with<sp/>an<sp/>auto-discovery<sp/>script<sp/>for</highlight></codeline>
<codeline><highlight class="normal">CTest<sp/>that<sp/>makes<sp/>use<sp/>of<sp/>the<sp/>test<sp/>traversal<sp/>features<sp/>of<sp/>PicoTest.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>file<sp/>`PicoTestConfig.cmake`<sp/>is<sp/>the<sp/>package<sp/>config<sp/>file<sp/>at<sp/>the<sp/>root<sp/>of<sp/>the</highlight></codeline>
<codeline><highlight class="normal">source<sp/>repository.<sp/>Add<sp/>its<sp/>path<sp/>to<sp/>your<sp/>`CMAKE_PREFIX_PATH`,<sp/>and<sp/>add<sp/>the</highlight></codeline>
<codeline><highlight class="normal">following<sp/>line<sp/>to<sp/>your<sp/>CMake<sp/>project:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cmake</highlight></codeline>
<codeline><highlight class="normal">find_package(PicoTest)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>then<sp/>add<sp/>the<sp/>`PicoTest::PicoTest`<sp/>dependency<sp/>to<sp/>your<sp/>targets,<sp/>e.g.:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cmake</highlight></codeline>
<codeline><highlight class="normal">add_executable(my_test_runner)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(my_test_runner</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>PRIVATE<sp/>PicoTest::PicoTest</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>also<sp/>use<sp/>CTest<sp/>for<sp/>test<sp/>automation<sp/>with<sp/>`enable_testing()`,<sp/>you<sp/>can<sp/>also</highlight></codeline>
<codeline><highlight class="normal">call<sp/>the<sp/>provided<sp/>`picotest_discover_tests`<sp/>macro<sp/>to<sp/>integrate<sp/>PicoTest<sp/>test</highlight></codeline>
<codeline><highlight class="normal">cases<sp/>in<sp/>your<sp/>build<sp/>process<sp/>automatically.<sp/>For<sp/>example,<sp/>assuming<sp/>that<sp/>the</highlight></codeline>
<codeline><highlight class="normal">`my_test_runner`<sp/>executable:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>when<sp/>passed<sp/>the<sp/>`-l`<sp/>option,<sp/>will<sp/>list<sp/>all<sp/>its<sp/>test<sp/>cases<sp/>using<sp/>the</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>`PICOTEST_TRAVERSE`<sp/>feature.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>when<sp/>passed<sp/>`&lt;test_name&gt;`,<sp/>will<sp/>execute<sp/>the<sp/>matching<sp/>test<sp/>case.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Then<sp/>the<sp/>following<sp/>lines<sp/>will:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>execute<sp/>`my_test_runner<sp/>-l`<sp/>as<sp/>a<sp/>post-build<sp/>command<sp/>to<sp/>`my_test_runner`,</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>add<sp/>each<sp/>discovered<sp/>test<sp/>case<sp/>using<sp/>`add_test(&lt;test_name&gt;)`,</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>when<sp/>invoking<sp/>the<sp/>`test`<sp/>rule,<sp/>execute<sp/>each<sp/>test<sp/>unitarily<sp/>with</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>`my_test_runner<sp/>&lt;test_name&gt;`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cmake</highlight></codeline>
<codeline><highlight class="normal">enable_testing()</highlight></codeline>
<codeline><highlight class="normal">picotest_discover_tests(my_test_runner</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>TEST_LIST_OPTION<sp/>&quot;-l&quot;</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Integration<sp/>with<sp/>Conan</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>provides<sp/>a<sp/>Conan<sp/>2<sp/>recipe<sp/>for<sp/>easier<sp/>dependency<sp/>management.<sp/>To<sp/>create</highlight></codeline>
<codeline><highlight class="normal">the<sp/>PicoTest<sp/>package<sp/>locally:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```sh</highlight></codeline>
<codeline><highlight class="normal">conan<sp/>create<sp/>.<sp/>--build=missing</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>then<sp/>add<sp/>it<sp/>to<sp/>your<sp/>project<sp/>requirements<sp/>(`conanfile.txt`):</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">[requires]</highlight></codeline>
<codeline><highlight class="normal">picotest/1.4.3</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Development</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">PicoTest<sp/>was<sp/>developed<sp/>on<sp/>Windows<sp/>10<sp/>and<sp/>Linux<sp/>Ubuntu<sp/>16.04<sp/>using<sp/>the<sp/>following</highlight></codeline>
<codeline><highlight class="normal">tools:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>IDE:<sp/>Visual<sp/>Studio<sp/>Code</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Build<sp/>tool:<sp/>CMake<sp/>3.15.2</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Windows<sp/>toolchain:<sp/>Microsoft<sp/>Visual<sp/>C++<sp/>Build<sp/>Tools<sp/>14</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Linux<sp/>toolchain:<sp/>GCC<sp/>5.4.0</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">It<sp/>should<sp/>work<sp/>with<sp/>any<sp/>reasonably<sp/>modern<sp/>C<sp/>compiler<sp/>that<sp/>supports<sp/>variadic</highlight></codeline>
<codeline><highlight class="normal">macros.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>assertion<sp/>mechanism<sp/>relies<sp/>on<sp/>`setjmp()`<sp/>/<sp/>`longjmp()`.<sp/>While<sp/>these</highlight></codeline>
<codeline><highlight class="normal">functions<sp/>are<sp/>discouraged<sp/>for<sp/>production<sp/>code,<sp/>their<sp/>usage<sp/>is<sp/>acceptable<sp/>in<sp/>the</highlight></codeline>
<codeline><highlight class="normal">context<sp/>of<sp/>unit<sp/>testing:<sp/>in<sp/>our<sp/>case,<sp/>`longjmp()`<sp/>is<sp/>only<sp/>called<sp/>when<sp/>an</highlight></codeline>
<codeline><highlight class="normal">assertion<sp/>fails,<sp/>a<sp/>situation<sp/>where<sp/>the<sp/>actual<sp/>process<sp/>state<sp/>is<sp/>no<sp/>longer</highlight></codeline>
<codeline><highlight class="normal">reliable<sp/>anyway.<sp/>Moreover,<sp/>they<sp/>constitute<sp/>the<sp/>only<sp/>standard<sp/>exception<sp/>handling</highlight></codeline>
<codeline><highlight class="normal">mechanism<sp/>for<sp/>plain<sp/>C<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[docs]:<sp/>https://fredericbonnet.github.io/picotest</highlight></codeline>
<codeline><highlight class="normal">[htmldocs]:<sp/>https://fredericbonnet.github.io/picotest/html/index.html</highlight></codeline>
<codeline><highlight class="normal">[doxygen]:<sp/>http://www.stack.nl/~dimitri/doxygen/</highlight></codeline>
<codeline><highlight class="normal">[seaborg]:<sp/>https://github.com/fredericbonnet/seaborg</highlight></codeline>
<codeline><highlight class="normal">[docsify]:<sp/>https://docsify.js.org/</highlight></codeline>
<codeline><highlight class="normal">[node.js]:<sp/>https://nodejs.org/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
    </programlisting>
    <location file="README.md"/>
  </compounddef>
</doxygen>
